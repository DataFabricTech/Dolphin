services:
  #  mysql:
  #    image: ${MYSQL_IMAGE}
  #    ports:
  #      - "5306:3306"
  #    expose:
  #      - '3306'
  #    volumes:
  #      - dbdata:/var/lib/mysqls
  #    environment:
  #      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
  #      MYSQL_DATABASE: ${MYSQL_DATABASE}
  #      MYSQL_USER: ${MYSQL_USER}
  #      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
  postgres:
    container_name: postgres
    image: ${POSTGRES_IMAGE}
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    networks:
      - datafabric_network
    volumes:
      - ./local-volume/postgres/init.d/init.sql:/docker-entrypoint-initdb.d/01-init.sql
      - ./local-volume/postgres/data:/var/lib/postgresql/data
    healthcheck:
      test: [
        "CMD-SHELL",
        "curl -f http://postgres:5432/health && pg_isready -Uadmin -d dolphin && pg_isready -Uadmin -d metastore_db || exit 1"
      ]
      interval: 10s
      timeout: 3s
      retries: 3
  trino:
    container_name: trino
    image: ${TRINO_IMAGE}
    ports:
      - '8080:8080'
    volumes:
      - ./local-volume/trino/config/config.properties:/etc/trino/config.properties
    networks:
      - datafabric_network
  hive-metastore:
    container_name: hive-metastore
    image: ${HIVE_METASTORE_IMAGE}
    ports:
      - '9083:9083'
    command:
      - --verbose
    environment:
      SERVICE_NAME: metastore
      POSTGRES_JDBC_VERSION: 42.7.3
      DB_DRIVER: postgres
      SERVICE_OPTS: "
        -Dhive.server2.enable.doAs=false
        -Dhive.tez.exec.inplace.progress=false
        -Dtez.runtime.optimize.local.fetch=true
        -Dhive.exec.submit.local.task.via.child=false
        -Dtez.local.mode=true
        -Dhive.execution.engine=tez
        -Dmetastore.metastore.event.db.notification.api.auth=false
        -Djavax.jdo.option.ConnectionDriverName=${DB_DRIVER_CLASSPATH}
        -Djavax.jdo.option.ConnectionURL=jdbc:${DB_TYPE}://postgres:5432/metastore_db
        -Djavax.jdo.option.ConnectionUserName=${DB_USER}
        -Djavax.jdo.option.ConnectionPassword=${DB_PASSWORD}"
    volumes:
      - ./local-volume/libs/postgresql-42.7.3.jar:/opt/hive/lib/postgresql-42.7.3.jar
      - ./local-volume/libs/aws-java-sdk-core-1.12.767.jar:/opt/hive/lib/aws-java-sdk-core-1.12.767.jar
      - ./local-volume/libs/aws-java-sdk-s3-1.12.767.jar:/opt/hive/lib/aws-java-sdk-s3-1.12.767.jar
      - ./local-volume/libs/hadoop-aws-3.3.6.jar:/opt/hive/lib/hadoop-aws-3.3.6.jar
    networks:
      - datafabric_network
    depends_on:
      - postgres
  jaeger:
    container_name: jaeger
    image: ${JAEGER_IMAGE}
    ports:
      - '4317:4317'
      - '14286:14286'
      - '16686:16686'
    environment:
      COLLECTOR_OTLP_ENABLED: true
    networks:
      - datafabric_network
networks:
  datafabric_network: